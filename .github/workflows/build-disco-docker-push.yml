name: Build Discovery Docker Image on Push

on:
  push:
    branches:
      - 'main'

  workflow_dispatch:

env:
  GO_VERSION: "~1.21.1"

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Checkout latest release tag
        run: |
          LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          git checkout $LATEST_TAG

      - uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: false
          check-latest: true

      - name: Build binaries
        run: |
          for arch in amd64 arm64 arm; do
            go run build.go -goos linux -goarch "$arch" -no-upgrade build stdiscosrv
            mv stdiscosrv stdiscosrv-linux-"$arch"
          done
        env:
          CGO_ENABLED: "0"
          BUILD_USER: docker

      - name: Add flags to docker entrypoint
        run: |
          sed -i 's|ENTRYPOINT \[\"/bin/entrypoint.sh\", \"/bin/stdiscosrv\"\]|ENTRYPOINT \[\"/bin/entrypoint.sh\", \"/bin/stdiscosrv\", "-http", "-listen=:8080"\]|' Dockerfile.stdiscosrv

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set version tags
        run: |
          version=$(go run build.go version)
          version=${version#v}
          echo "ST_VERSION=$version" >> $GITHUB_ENV

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          context: git
          images: |
            cloudptsd/stdiscosrv
            ghcr.io/cloudptsd/stdiscosrv
          tags: |
            type=raw,value=latest
            type=semver,pattern={{version}},value=${{ env.ST_VERSION }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile.stdiscosrv
          platforms: linux/amd64,linux/arm/v7,linux/arm64/v8
          push: true
          tags: ${{ steps.meta.outputs.tags }}

permissions:
  contents: write
  packages: write
